'use client';

import React, { useState } from 'react';
import '../styles/quiz.css';

interface ExamQuestion {
  id: number;
  question: string;
  options: string[];
}

interface FinalExamProps {
  questions?: ExamQuestion[];
  onComplete?: () => void;
  courseName?: string;
}

const FinalExam: React.FC<FinalExamProps> = ({ 
  questions = defaultExamQuestions, 
  onComplete,
  courseName = "ููุฑุณ ุงูุจุฑูุฌุฉ ุงูุฃุณุงุณูุฉ"
}) => {
  const [selectedAnswers, setSelectedAnswers] = useState<{ [key: number]: number }>({});
  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);

  const currentQuestion = questions[currentQuestionIndex];
  const isLastQuestion = currentQuestionIndex === questions.length - 1;
  const isFirstQuestion = currentQuestionIndex === 0;

  const handleOptionSelect = (optionIndex: number) => {
    setSelectedAnswers(prev => ({
      ...prev,
      [currentQuestionIndex]: optionIndex
    }));
  };

  const handleNext = () => {
    if (currentQuestionIndex < questions.length - 1) {
      setCurrentQuestionIndex(prev => prev + 1);
    }
  };

  const handlePrevious = () => {
    if (currentQuestionIndex > 0) {
      setCurrentQuestionIndex(prev => prev - 1);
    }
  };

  const handleFinish = () => {
    if (onComplete) {
      onComplete();
    }
  };

  return (
    <div className="quiz-container">
      <div style={{
        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
        color: '#fff',
        padding: '20px',
        borderRadius: '12px',
        marginBottom: '20px',
        textAlign: 'center'
      }}>
        <h2 style={{ margin: 0, fontSize: '24px', fontWeight: 'bold' }}>
          ุงูุงูุชุญุงู ุงูููุงุฆู
        </h2>
        <p style={{ margin: '8px 0 0 0', fontSize: '16px', opacity: 0.9 }}>
          {courseName}
        </p>
      </div>

      <div className="quiz-progress">
        ุงูุณุคุงู {currentQuestionIndex + 1} ูู {questions.length}
      </div>

      <div className="question-box">
        <div className="question-number">
          ุงูุณุคุงู {currentQuestionIndex + 1}
        </div>
        <div className="question-text">
          {currentQuestion.question}
        </div>
      </div>

      <div className="navigation-buttons">
        <button 
          className="nav-button" 
          onClick={handlePrevious}
          disabled={isFirstQuestion}
        >
          ุงูุณุงุจู
        </button>
        <button 
          className="nav-button" 
          onClick={handleNext}
          disabled={isLastQuestion}
        >
          ุงูุชุงูู
        </button>
      </div>

      <div className="options-container">
        {currentQuestion.options.map((option, index) => (
          <div
            key={index}
            className={`option-item ${selectedAnswers[currentQuestionIndex] === index ? 'selected' : ''}`}
            onClick={() => handleOptionSelect(index)}
          >
            <input
              type="radio"
              name={`question-${currentQuestionIndex}`}
              value={index}
              checked={selectedAnswers[currentQuestionIndex] === index}
              onChange={() => handleOptionSelect(index)}
              className="option-radio"
            />
            {option}
          </div>
        ))}
      </div>

      {isLastQuestion && (
        <button 
          className="finish-button" 
          onClick={handleFinish}
          style={{
            background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
            color: '#fff',
            fontSize: '18px',
            fontWeight: 'bold'
          }}
        >
          ุฅููุงุก ุงูุงูุชุญุงู ูุงูุญุตูู ุนูู ุงูุดูุงุฏุฉ
          <div className="finish-arrow">
            ๐
          </div>
        </button>
      )}
    </div>
  );
};

// ุฃุณุฆูุฉ ุงูุงูุชุญุงู ุงูููุงุฆู ุงูููููุฉ
const defaultExamQuestions: ExamQuestion[] = [
  {
    id: 1,
    question: "ูุง ูู ุงูุฑูุงุฆุฒ ุงูุฃุณุงุณูุฉ ุงูุชู ูููู ุนูููุง ูููุฌ ููุตุฉ ุฃูู ุงูุชุนููููุ",
    options: [
      "ุงูุฌูุน ุจูู ุงูุนููู ุงูุดุฑุนูุฉ ูุงูุชุฑุจููุฉ ูุงูุชูููุฉ ูุงูุฅุนูุงููุฉ",
      "ุงูุชุฑููุฒ ุนูู ุงูุนููู ุงูุดุฑุนูุฉ ููุท",
      "ุงูุชุฑููุฒ ุนูู ุงูุชูููุฉ ุงูุญุฏูุซุฉ ููุท",
      "ุงูุชุฑููุฒ ุนูู ุงูุฅุนูุงู ูุงูุงุชุตุงู ููุท"
    ]
  },
  {
    id: 2,
    question: "ููู ุชุญูู ููุตุฉ ุฃูู ุงูุชูุงุฒู ุจูู ุงูุฃุตุงูุฉ ูุงููุนุงุตุฑุฉ ูู ุจุฑุงูุฌู ุงูุชุนููููุฉุ",
    options: [
      "ุจุฏูุฌ ุงูุชุฑุงุซ ุงูุฅุณูุงูู ูุน ุงูุฃุณุงููุจ ุงูุชุนููููุฉ ุงูุญุฏูุซุฉ ูุงูุชูููุงุช ุงููุชุทูุฑุฉ",
      "ุจุงูุชุฑููุฒ ุนูู ุงูุชุฑุงุซ ุงููุฏูู ููุท",
      "ุจุชุฌุงูู ุงูุชุฑุงุซ ูุงูุชุฑููุฒ ุนูู ุงูุญุฏุงุซุฉ",
      "ุจูุตู ุงูุชุฑุงุซ ุนู ุงูุฃุณุงููุจ ุงูุญุฏูุซุฉ"
    ]
  },
  {
    id: 3,
    question: "ูุง ูู ุงููุฏู ูู ุชุทุจูู ูุจุงุฏุฆ ุงูุชุฑุจูุฉ ุงูุญุฏูุซุฉ ูู ููุตุฉ ุฃููุ",
    options: [
      "ุฅุนุฏุงุฏ ููุงุฏุฑ ูุชุฎุตุตุฉ ูุงุฏุฑุฉ ุนูู ุงููููุถ ุจูุฌุชูุนุงุชูุง ูุชุญููู ุงูุชููุฒ",
      "ุชุฎุฑูุฌ ุทูุงุจ ุจูุนูููุงุช ูุธุฑูุฉ ููุท",
      "ุงูุชุฑููุฒ ุนูู ุงูุญูุธ ูุงูุชูููู",
      "ุฅูุชุงุฌ ุฎุฑูุฌูู ููุนูู ูู ูุฌุงู ูุงุญุฏ ููุท"
    ]
  },
  {
    id: 4,
    question: "ููู ุชุณุงูู ุงูุชูููุงุช ุงูุญุฏูุซุฉ ูู ุชุญููู ุฑุณุงูุฉ ููุตุฉ ุฃูู ุงูุชุนููููุฉุ",
    options: [
      "ุจุชูููุฑ ุจูุฆุฉ ุชุนููููุฉ ุชูุงุนููุฉ ุชูุงูุจ ุงุญุชูุงุฌุงุช ุณูู ุงูุนูู ูุชุญุฏูุงุช ุงูุนุตุฑ",
      "ุจุชุนููุฏ ุงูุนูููุฉ ุงูุชุนููููุฉ",
      "ุจุฅูุบุงุก ุฏูุฑ ุงููุนูู ูู ุงูุชุนููู",
      "ุจุงูุชุฑููุฒ ุนูู ุงูุชุฑููู ุฏูู ุงูุชุนูู"
    ]
  },
  {
    id: 5,
    question: "ูุง ุฏูุฑ ุงูุฅุนูุงู ุงูุชุฑุจูู ูู ููุณูุฉ ููุตุฉ ุฃูู ุงูุชุนููููุฉุ",
    options: [
      "ูุดุฑ ุงููุญุชูู ุงูุชุนูููู ุจุทุฑู ูุจุชูุฑุฉ ูุฌุฐุงุจุฉ ุชุฎุฏู ุฃูุฏุงู ุงูุชุฑุจูุฉ ูุงูุชุนููู",
      "ุงูุชุฑููุฌ ููููุตุฉ ููุท",
      "ููู ุงูุฃุฎุจุงุฑ ุงูุนุงูุฉ",
      "ุงูุชุฑููุฒ ุนูู ุงูุฌุงูุจ ุงูุชุฌุงุฑู"
    ]
  },
  {
    id: 6,
    question: "ููู ุชุณุฏ ููุตุฉ ุฃูู ุงููุฌูุฉ ุจูู ุงูุชุนููู ุงููุธุฑู ูุงูููุงุฑุณุฉ ุงูุนูููุฉุ",
    options: [
      "ูู ุฎูุงู ููุงูุฌ ุนูููุฉ ูุจุชูุฑุฉ ููุชูุงููุฉ ุชุฑุจุท ุงููุธุฑูุฉ ุจุงูุชุทุจูู ุงูุนููู",
      "ุจุงูุชุฑููุฒ ุนูู ุงููุธุฑูุฉ ููุท",
      "ุจุงูุชุฑููุฒ ุนูู ุงูุชุทุจูู ุฏูู ูุธุฑูุฉ",
      "ุจูุตู ุงููุธุฑูุฉ ุนู ุงูุชุทุจูู"
    ]
  },
  {
    id: 7,
    question: "ูุง ุฃูููุฉ ุงูุงุณุชูุงุฏุฉ ูู ูุฎุจุฉ ุงูุฎุจุฑุงุก ูุงููุชุฎุตุตูู ูู ููุตุฉ ุฃููุ",
    options: [
      "ุถูุงู ุฌูุฏุฉ ุงูููุงูุฌ ูุงูุจุฑุงูุฌ ุงูุชุนููููุฉ ูุชุญููู ุฃุนูู ูุนุงููุฑ ุงูุชููุฒ",
      "ุชูููุฑ ุงูุชูุงููู ููุท",
      "ุฒูุงุฏุฉ ุนุฏุฏ ุงููุฏุฑุณูู",
      "ุชุนููุฏ ุงูุนูููุฉ ุงูุชุนููููุฉ"
    ]
  },
  {
    id: 8,
    question: "ููู ุชุฎุฏู ุงูุจุฑุงูุฌ ุงูุฏุจููููุฉ ูู ููุตุฉ ุฃูู ุงุญุชูุงุฌุงุช ุณูู ุงูุนููุ",
    options: [
      "ุจุฅุนุฏุงุฏ ูุชุฎุตุตูู ูุคูููู ูู ูุฌุงูุงุช ูุชููุนุฉ ุชูุจู ูุชุทูุจุงุช ุงูุนุตุฑ ุงูุญุฏูุซ",
      "ุจุชุฎุฑูุฌ ุทูุงุจ ูู ุชุฎุตุต ูุงุญุฏ ููุท",
      "ุจุงูุชุฑููุฒ ุนูู ุงููุนุฑูุฉ ุงููุธุฑูุฉ ุฏูู ุงูููุงุฑุงุช ุงูุนูููุฉ",
      "ุจุฅููุงู ุงุญุชูุงุฌุงุช ุณูู ุงูุนูู"
    ]
  }
];

export default FinalExam;